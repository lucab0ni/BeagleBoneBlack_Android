language: cpp

compiler:
 - gcc

notifications:
  recipients:
    - luca.bonifacio@bbv.ch
  email:
    on_success: changed
    on_failure: always

env:
 global:
  - secure: pMnt4BCa57AMt701QnWuOFcDdRAU8ewWwSM2FC6Ggur/K3EvKk4OTXSxr41/x1K9hEHHMCpbe3STf4G3Cl1hn24NSmqDN98SVCSrNVsRx5IX1ng2Ggx09PvK/qaUM/zOxEQPlq8iXyT3o9ZmIgyDS5FM+e9pJk+Vg6kJgJFRXag=
  - secure: nGHkZMWK/vTwb+FP3mo1pxX/mN08ivIQQ6b2g+RqPuMlAmPcBtR1FaQogi2/zkD8jwLlKhwPECTzEQ9yh2moaTOP6GjZzlfE0iD6zs5xQFZBhFFv+PadCRlE1xnUSFStuAXurULbNF3jyItxzNIunt4r06rqMvOlmvN0d+qRong=


#======================================================================================================================
# Build Lifecycle #
#
# By default, the worker performs the build as following:
#
# 1. Switch language runtime (for example, to Ruby 1.9.3 or PHP 5.4)
# 2. Clone project repository from GitHub
# 3. Run before_install scripts (if any)
# 4. cd to the clone directory, run dependencies installation command (default specific to project language)
# 5. Run before_script scripts (if any)
# 6. Run test script command (mandatory). It must use exit code 0 on success and any code on failure.
# 7. Run after_success/after_failure scripts (if any)
# 8. Run after_script scripts (if any)
#
#======================================================================================================================


before_script:
 - git config --global user.name "Travis"
 - git config --global user.email "you@example.com"
 - ./polling.sh &
 - ./setup_buildenv.sh

script:
 - ./Installer.sh

after_script:
 - kill $(cat polling_pid)

